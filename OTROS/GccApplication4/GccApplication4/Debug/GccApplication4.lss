
GccApplication4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000003c2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000036e  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000003c2  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000003f4  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  00000434  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000717  00000000  00000000  00000454  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000066d  00000000  00000000  00000b6b  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000002b6  00000000  00000000  000011d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  00001490  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003a8  00000000  00000000  000014b4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000060  00000000  00000000  0000185c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  000018bc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 40 00 	call	0x80	; 0x80 <main>
  78:	0c 94 b5 01 	jmp	0x36a	; 0x36a <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <main>:
#include <util/delay.h>

int main(void)
{
int DATA;
	DDRB|=(1<<2);
  80:	22 9a       	sbi	0x04, 2	; 4
	TCCR1A=0b00100010;
  82:	82 e2       	ldi	r24, 0x22	; 34
  84:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
	TCCR1B=0b00001001;
  88:	89 e0       	ldi	r24, 0x09	; 9
  8a:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>

	DDRD|=(1<<6);
  8e:	56 9a       	sbi	0x0a, 6	; 10
	TCCR0A=0b10000001;
  90:	81 e8       	ldi	r24, 0x81	; 129
  92:	84 bd       	out	0x24, r24	; 36
	TCCR0B=0b00000001;
  94:	81 e0       	ldi	r24, 0x01	; 1
  96:	85 bd       	out	0x25, r24	; 37
	
	
	ADMUX=0b01000101;
  98:	85 e4       	ldi	r24, 0x45	; 69
  9a:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
	ADCSRA=0b11000011;
  9e:	83 ec       	ldi	r24, 0xC3	; 195
  a0:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
	DIDR0|=(1<<3);
  a4:	ee e7       	ldi	r30, 0x7E	; 126
  a6:	f0 e0       	ldi	r31, 0x00	; 0
  a8:	80 81       	ld	r24, Z
  aa:	88 60       	ori	r24, 0x08	; 8
  ac:	80 83       	st	Z, r24
    /* Replace with your application code */
    while (1)
    {
		ADCSRA|=(1<<ADEN)|(1<<ADSC);
  ae:	ca e7       	ldi	r28, 0x7A	; 122
  b0:	d0 e0       	ldi	r29, 0x00	; 0
		while(ADCSRA&(1<<ADSC)){}
		ADCSRA&=~(1<<ADEN);
	    DATA=ADC;
  b2:	0f 2e       	mov	r0, r31
  b4:	f8 e7       	ldi	r31, 0x78	; 120
  b6:	ef 2e       	mov	r14, r31
  b8:	f1 2c       	mov	r15, r1
  ba:	f0 2d       	mov	r31, r0
		_delay_ms(200);
		OCR1B=DATA*0.7;
  bc:	0a e8       	ldi	r16, 0x8A	; 138
  be:	10 e0       	ldi	r17, 0x00	; 0
	ADCSRA=0b11000011;
	DIDR0|=(1<<3);
    /* Replace with your application code */
    while (1)
    {
		ADCSRA|=(1<<ADEN)|(1<<ADSC);
  c0:	88 81       	ld	r24, Y
  c2:	80 6c       	ori	r24, 0xC0	; 192
  c4:	88 83       	st	Y, r24
		while(ADCSRA&(1<<ADSC)){}
  c6:	88 81       	ld	r24, Y
  c8:	86 fd       	sbrc	r24, 6
  ca:	fd cf       	rjmp	.-6      	; 0xc6 <main+0x46>
		ADCSRA&=~(1<<ADEN);
  cc:	88 81       	ld	r24, Y
  ce:	8f 77       	andi	r24, 0x7F	; 127
  d0:	88 83       	st	Y, r24
	    DATA=ADC;
  d2:	f7 01       	movw	r30, r14
  d4:	60 81       	ld	r22, Z
  d6:	71 81       	ldd	r23, Z+1	; 0x01
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  d8:	8f e4       	ldi	r24, 0x4F	; 79
  da:	93 ec       	ldi	r25, 0xC3	; 195
  dc:	01 97       	sbiw	r24, 0x01	; 1
  de:	f1 f7       	brne	.-4      	; 0xdc <main+0x5c>
  e0:	00 c0       	rjmp	.+0      	; 0xe2 <main+0x62>
  e2:	00 00       	nop
		_delay_ms(200);
		OCR1B=DATA*0.7;
  e4:	07 2e       	mov	r0, r23
  e6:	00 0c       	add	r0, r0
  e8:	88 0b       	sbc	r24, r24
  ea:	99 0b       	sbc	r25, r25
  ec:	0e 94 bc 00 	call	0x178	; 0x178 <__floatsisf>
  f0:	23 e3       	ldi	r18, 0x33	; 51
  f2:	33 e3       	ldi	r19, 0x33	; 51
  f4:	43 e3       	ldi	r20, 0x33	; 51
  f6:	5f e3       	ldi	r21, 0x3F	; 63
  f8:	0e 94 20 01 	call	0x240	; 0x240 <__mulsf3>
  fc:	4b 01       	movw	r8, r22
  fe:	5c 01       	movw	r10, r24
 100:	0e 94 8b 00 	call	0x116	; 0x116 <__fixunssfsi>
 104:	f8 01       	movw	r30, r16
 106:	71 83       	std	Z+1, r23	; 0x01
 108:	60 83       	st	Z, r22
		OCR0A=DATA*0.7;
 10a:	c5 01       	movw	r24, r10
 10c:	b4 01       	movw	r22, r8
 10e:	0e 94 8b 00 	call	0x116	; 0x116 <__fixunssfsi>
 112:	67 bd       	out	0x27, r22	; 39
		
    }
 114:	d5 cf       	rjmp	.-86     	; 0xc0 <main+0x40>

00000116 <__fixunssfsi>:
 116:	0e 94 ff 00 	call	0x1fe	; 0x1fe <__fp_splitA>
 11a:	88 f0       	brcs	.+34     	; 0x13e <__fixunssfsi+0x28>
 11c:	9f 57       	subi	r25, 0x7F	; 127
 11e:	98 f0       	brcs	.+38     	; 0x146 <__fixunssfsi+0x30>
 120:	b9 2f       	mov	r27, r25
 122:	99 27       	eor	r25, r25
 124:	b7 51       	subi	r27, 0x17	; 23
 126:	b0 f0       	brcs	.+44     	; 0x154 <__fixunssfsi+0x3e>
 128:	e1 f0       	breq	.+56     	; 0x162 <__fixunssfsi+0x4c>
 12a:	66 0f       	add	r22, r22
 12c:	77 1f       	adc	r23, r23
 12e:	88 1f       	adc	r24, r24
 130:	99 1f       	adc	r25, r25
 132:	1a f0       	brmi	.+6      	; 0x13a <__fixunssfsi+0x24>
 134:	ba 95       	dec	r27
 136:	c9 f7       	brne	.-14     	; 0x12a <__fixunssfsi+0x14>
 138:	14 c0       	rjmp	.+40     	; 0x162 <__fixunssfsi+0x4c>
 13a:	b1 30       	cpi	r27, 0x01	; 1
 13c:	91 f0       	breq	.+36     	; 0x162 <__fixunssfsi+0x4c>
 13e:	0e 94 19 01 	call	0x232	; 0x232 <__fp_zero>
 142:	b1 e0       	ldi	r27, 0x01	; 1
 144:	08 95       	ret
 146:	0c 94 19 01 	jmp	0x232	; 0x232 <__fp_zero>
 14a:	67 2f       	mov	r22, r23
 14c:	78 2f       	mov	r23, r24
 14e:	88 27       	eor	r24, r24
 150:	b8 5f       	subi	r27, 0xF8	; 248
 152:	39 f0       	breq	.+14     	; 0x162 <__fixunssfsi+0x4c>
 154:	b9 3f       	cpi	r27, 0xF9	; 249
 156:	cc f3       	brlt	.-14     	; 0x14a <__fixunssfsi+0x34>
 158:	86 95       	lsr	r24
 15a:	77 95       	ror	r23
 15c:	67 95       	ror	r22
 15e:	b3 95       	inc	r27
 160:	d9 f7       	brne	.-10     	; 0x158 <__fixunssfsi+0x42>
 162:	3e f4       	brtc	.+14     	; 0x172 <__fixunssfsi+0x5c>
 164:	90 95       	com	r25
 166:	80 95       	com	r24
 168:	70 95       	com	r23
 16a:	61 95       	neg	r22
 16c:	7f 4f       	sbci	r23, 0xFF	; 255
 16e:	8f 4f       	sbci	r24, 0xFF	; 255
 170:	9f 4f       	sbci	r25, 0xFF	; 255
 172:	08 95       	ret

00000174 <__floatunsisf>:
 174:	e8 94       	clt
 176:	09 c0       	rjmp	.+18     	; 0x18a <__floatsisf+0x12>

00000178 <__floatsisf>:
 178:	97 fb       	bst	r25, 7
 17a:	3e f4       	brtc	.+14     	; 0x18a <__floatsisf+0x12>
 17c:	90 95       	com	r25
 17e:	80 95       	com	r24
 180:	70 95       	com	r23
 182:	61 95       	neg	r22
 184:	7f 4f       	sbci	r23, 0xFF	; 255
 186:	8f 4f       	sbci	r24, 0xFF	; 255
 188:	9f 4f       	sbci	r25, 0xFF	; 255
 18a:	99 23       	and	r25, r25
 18c:	a9 f0       	breq	.+42     	; 0x1b8 <__floatsisf+0x40>
 18e:	f9 2f       	mov	r31, r25
 190:	96 e9       	ldi	r25, 0x96	; 150
 192:	bb 27       	eor	r27, r27
 194:	93 95       	inc	r25
 196:	f6 95       	lsr	r31
 198:	87 95       	ror	r24
 19a:	77 95       	ror	r23
 19c:	67 95       	ror	r22
 19e:	b7 95       	ror	r27
 1a0:	f1 11       	cpse	r31, r1
 1a2:	f8 cf       	rjmp	.-16     	; 0x194 <__floatsisf+0x1c>
 1a4:	fa f4       	brpl	.+62     	; 0x1e4 <__floatsisf+0x6c>
 1a6:	bb 0f       	add	r27, r27
 1a8:	11 f4       	brne	.+4      	; 0x1ae <__floatsisf+0x36>
 1aa:	60 ff       	sbrs	r22, 0
 1ac:	1b c0       	rjmp	.+54     	; 0x1e4 <__floatsisf+0x6c>
 1ae:	6f 5f       	subi	r22, 0xFF	; 255
 1b0:	7f 4f       	sbci	r23, 0xFF	; 255
 1b2:	8f 4f       	sbci	r24, 0xFF	; 255
 1b4:	9f 4f       	sbci	r25, 0xFF	; 255
 1b6:	16 c0       	rjmp	.+44     	; 0x1e4 <__floatsisf+0x6c>
 1b8:	88 23       	and	r24, r24
 1ba:	11 f0       	breq	.+4      	; 0x1c0 <__floatsisf+0x48>
 1bc:	96 e9       	ldi	r25, 0x96	; 150
 1be:	11 c0       	rjmp	.+34     	; 0x1e2 <__floatsisf+0x6a>
 1c0:	77 23       	and	r23, r23
 1c2:	21 f0       	breq	.+8      	; 0x1cc <__floatsisf+0x54>
 1c4:	9e e8       	ldi	r25, 0x8E	; 142
 1c6:	87 2f       	mov	r24, r23
 1c8:	76 2f       	mov	r23, r22
 1ca:	05 c0       	rjmp	.+10     	; 0x1d6 <__floatsisf+0x5e>
 1cc:	66 23       	and	r22, r22
 1ce:	71 f0       	breq	.+28     	; 0x1ec <__floatsisf+0x74>
 1d0:	96 e8       	ldi	r25, 0x86	; 134
 1d2:	86 2f       	mov	r24, r22
 1d4:	70 e0       	ldi	r23, 0x00	; 0
 1d6:	60 e0       	ldi	r22, 0x00	; 0
 1d8:	2a f0       	brmi	.+10     	; 0x1e4 <__floatsisf+0x6c>
 1da:	9a 95       	dec	r25
 1dc:	66 0f       	add	r22, r22
 1de:	77 1f       	adc	r23, r23
 1e0:	88 1f       	adc	r24, r24
 1e2:	da f7       	brpl	.-10     	; 0x1da <__floatsisf+0x62>
 1e4:	88 0f       	add	r24, r24
 1e6:	96 95       	lsr	r25
 1e8:	87 95       	ror	r24
 1ea:	97 f9       	bld	r25, 7
 1ec:	08 95       	ret

000001ee <__fp_split3>:
 1ee:	57 fd       	sbrc	r21, 7
 1f0:	90 58       	subi	r25, 0x80	; 128
 1f2:	44 0f       	add	r20, r20
 1f4:	55 1f       	adc	r21, r21
 1f6:	59 f0       	breq	.+22     	; 0x20e <__fp_splitA+0x10>
 1f8:	5f 3f       	cpi	r21, 0xFF	; 255
 1fa:	71 f0       	breq	.+28     	; 0x218 <__fp_splitA+0x1a>
 1fc:	47 95       	ror	r20

000001fe <__fp_splitA>:
 1fe:	88 0f       	add	r24, r24
 200:	97 fb       	bst	r25, 7
 202:	99 1f       	adc	r25, r25
 204:	61 f0       	breq	.+24     	; 0x21e <__fp_splitA+0x20>
 206:	9f 3f       	cpi	r25, 0xFF	; 255
 208:	79 f0       	breq	.+30     	; 0x228 <__fp_splitA+0x2a>
 20a:	87 95       	ror	r24
 20c:	08 95       	ret
 20e:	12 16       	cp	r1, r18
 210:	13 06       	cpc	r1, r19
 212:	14 06       	cpc	r1, r20
 214:	55 1f       	adc	r21, r21
 216:	f2 cf       	rjmp	.-28     	; 0x1fc <__fp_split3+0xe>
 218:	46 95       	lsr	r20
 21a:	f1 df       	rcall	.-30     	; 0x1fe <__fp_splitA>
 21c:	08 c0       	rjmp	.+16     	; 0x22e <__fp_splitA+0x30>
 21e:	16 16       	cp	r1, r22
 220:	17 06       	cpc	r1, r23
 222:	18 06       	cpc	r1, r24
 224:	99 1f       	adc	r25, r25
 226:	f1 cf       	rjmp	.-30     	; 0x20a <__fp_splitA+0xc>
 228:	86 95       	lsr	r24
 22a:	71 05       	cpc	r23, r1
 22c:	61 05       	cpc	r22, r1
 22e:	08 94       	sec
 230:	08 95       	ret

00000232 <__fp_zero>:
 232:	e8 94       	clt

00000234 <__fp_szero>:
 234:	bb 27       	eor	r27, r27
 236:	66 27       	eor	r22, r22
 238:	77 27       	eor	r23, r23
 23a:	cb 01       	movw	r24, r22
 23c:	97 f9       	bld	r25, 7
 23e:	08 95       	ret

00000240 <__mulsf3>:
 240:	0e 94 33 01 	call	0x266	; 0x266 <__mulsf3x>
 244:	0c 94 a4 01 	jmp	0x348	; 0x348 <__fp_round>
 248:	0e 94 96 01 	call	0x32c	; 0x32c <__fp_pscA>
 24c:	38 f0       	brcs	.+14     	; 0x25c <__mulsf3+0x1c>
 24e:	0e 94 9d 01 	call	0x33a	; 0x33a <__fp_pscB>
 252:	20 f0       	brcs	.+8      	; 0x25c <__mulsf3+0x1c>
 254:	95 23       	and	r25, r21
 256:	11 f0       	breq	.+4      	; 0x25c <__mulsf3+0x1c>
 258:	0c 94 8d 01 	jmp	0x31a	; 0x31a <__fp_inf>
 25c:	0c 94 93 01 	jmp	0x326	; 0x326 <__fp_nan>
 260:	11 24       	eor	r1, r1
 262:	0c 94 1a 01 	jmp	0x234	; 0x234 <__fp_szero>

00000266 <__mulsf3x>:
 266:	0e 94 f7 00 	call	0x1ee	; 0x1ee <__fp_split3>
 26a:	70 f3       	brcs	.-36     	; 0x248 <__mulsf3+0x8>

0000026c <__mulsf3_pse>:
 26c:	95 9f       	mul	r25, r21
 26e:	c1 f3       	breq	.-16     	; 0x260 <__mulsf3+0x20>
 270:	95 0f       	add	r25, r21
 272:	50 e0       	ldi	r21, 0x00	; 0
 274:	55 1f       	adc	r21, r21
 276:	62 9f       	mul	r22, r18
 278:	f0 01       	movw	r30, r0
 27a:	72 9f       	mul	r23, r18
 27c:	bb 27       	eor	r27, r27
 27e:	f0 0d       	add	r31, r0
 280:	b1 1d       	adc	r27, r1
 282:	63 9f       	mul	r22, r19
 284:	aa 27       	eor	r26, r26
 286:	f0 0d       	add	r31, r0
 288:	b1 1d       	adc	r27, r1
 28a:	aa 1f       	adc	r26, r26
 28c:	64 9f       	mul	r22, r20
 28e:	66 27       	eor	r22, r22
 290:	b0 0d       	add	r27, r0
 292:	a1 1d       	adc	r26, r1
 294:	66 1f       	adc	r22, r22
 296:	82 9f       	mul	r24, r18
 298:	22 27       	eor	r18, r18
 29a:	b0 0d       	add	r27, r0
 29c:	a1 1d       	adc	r26, r1
 29e:	62 1f       	adc	r22, r18
 2a0:	73 9f       	mul	r23, r19
 2a2:	b0 0d       	add	r27, r0
 2a4:	a1 1d       	adc	r26, r1
 2a6:	62 1f       	adc	r22, r18
 2a8:	83 9f       	mul	r24, r19
 2aa:	a0 0d       	add	r26, r0
 2ac:	61 1d       	adc	r22, r1
 2ae:	22 1f       	adc	r18, r18
 2b0:	74 9f       	mul	r23, r20
 2b2:	33 27       	eor	r19, r19
 2b4:	a0 0d       	add	r26, r0
 2b6:	61 1d       	adc	r22, r1
 2b8:	23 1f       	adc	r18, r19
 2ba:	84 9f       	mul	r24, r20
 2bc:	60 0d       	add	r22, r0
 2be:	21 1d       	adc	r18, r1
 2c0:	82 2f       	mov	r24, r18
 2c2:	76 2f       	mov	r23, r22
 2c4:	6a 2f       	mov	r22, r26
 2c6:	11 24       	eor	r1, r1
 2c8:	9f 57       	subi	r25, 0x7F	; 127
 2ca:	50 40       	sbci	r21, 0x00	; 0
 2cc:	9a f0       	brmi	.+38     	; 0x2f4 <__mulsf3_pse+0x88>
 2ce:	f1 f0       	breq	.+60     	; 0x30c <__mulsf3_pse+0xa0>
 2d0:	88 23       	and	r24, r24
 2d2:	4a f0       	brmi	.+18     	; 0x2e6 <__mulsf3_pse+0x7a>
 2d4:	ee 0f       	add	r30, r30
 2d6:	ff 1f       	adc	r31, r31
 2d8:	bb 1f       	adc	r27, r27
 2da:	66 1f       	adc	r22, r22
 2dc:	77 1f       	adc	r23, r23
 2de:	88 1f       	adc	r24, r24
 2e0:	91 50       	subi	r25, 0x01	; 1
 2e2:	50 40       	sbci	r21, 0x00	; 0
 2e4:	a9 f7       	brne	.-22     	; 0x2d0 <__mulsf3_pse+0x64>
 2e6:	9e 3f       	cpi	r25, 0xFE	; 254
 2e8:	51 05       	cpc	r21, r1
 2ea:	80 f0       	brcs	.+32     	; 0x30c <__mulsf3_pse+0xa0>
 2ec:	0c 94 8d 01 	jmp	0x31a	; 0x31a <__fp_inf>
 2f0:	0c 94 1a 01 	jmp	0x234	; 0x234 <__fp_szero>
 2f4:	5f 3f       	cpi	r21, 0xFF	; 255
 2f6:	e4 f3       	brlt	.-8      	; 0x2f0 <__mulsf3_pse+0x84>
 2f8:	98 3e       	cpi	r25, 0xE8	; 232
 2fa:	d4 f3       	brlt	.-12     	; 0x2f0 <__mulsf3_pse+0x84>
 2fc:	86 95       	lsr	r24
 2fe:	77 95       	ror	r23
 300:	67 95       	ror	r22
 302:	b7 95       	ror	r27
 304:	f7 95       	ror	r31
 306:	e7 95       	ror	r30
 308:	9f 5f       	subi	r25, 0xFF	; 255
 30a:	c1 f7       	brne	.-16     	; 0x2fc <__mulsf3_pse+0x90>
 30c:	fe 2b       	or	r31, r30
 30e:	88 0f       	add	r24, r24
 310:	91 1d       	adc	r25, r1
 312:	96 95       	lsr	r25
 314:	87 95       	ror	r24
 316:	97 f9       	bld	r25, 7
 318:	08 95       	ret

0000031a <__fp_inf>:
 31a:	97 f9       	bld	r25, 7
 31c:	9f 67       	ori	r25, 0x7F	; 127
 31e:	80 e8       	ldi	r24, 0x80	; 128
 320:	70 e0       	ldi	r23, 0x00	; 0
 322:	60 e0       	ldi	r22, 0x00	; 0
 324:	08 95       	ret

00000326 <__fp_nan>:
 326:	9f ef       	ldi	r25, 0xFF	; 255
 328:	80 ec       	ldi	r24, 0xC0	; 192
 32a:	08 95       	ret

0000032c <__fp_pscA>:
 32c:	00 24       	eor	r0, r0
 32e:	0a 94       	dec	r0
 330:	16 16       	cp	r1, r22
 332:	17 06       	cpc	r1, r23
 334:	18 06       	cpc	r1, r24
 336:	09 06       	cpc	r0, r25
 338:	08 95       	ret

0000033a <__fp_pscB>:
 33a:	00 24       	eor	r0, r0
 33c:	0a 94       	dec	r0
 33e:	12 16       	cp	r1, r18
 340:	13 06       	cpc	r1, r19
 342:	14 06       	cpc	r1, r20
 344:	05 06       	cpc	r0, r21
 346:	08 95       	ret

00000348 <__fp_round>:
 348:	09 2e       	mov	r0, r25
 34a:	03 94       	inc	r0
 34c:	00 0c       	add	r0, r0
 34e:	11 f4       	brne	.+4      	; 0x354 <__fp_round+0xc>
 350:	88 23       	and	r24, r24
 352:	52 f0       	brmi	.+20     	; 0x368 <__fp_round+0x20>
 354:	bb 0f       	add	r27, r27
 356:	40 f4       	brcc	.+16     	; 0x368 <__fp_round+0x20>
 358:	bf 2b       	or	r27, r31
 35a:	11 f4       	brne	.+4      	; 0x360 <__fp_round+0x18>
 35c:	60 ff       	sbrs	r22, 0
 35e:	04 c0       	rjmp	.+8      	; 0x368 <__fp_round+0x20>
 360:	6f 5f       	subi	r22, 0xFF	; 255
 362:	7f 4f       	sbci	r23, 0xFF	; 255
 364:	8f 4f       	sbci	r24, 0xFF	; 255
 366:	9f 4f       	sbci	r25, 0xFF	; 255
 368:	08 95       	ret

0000036a <_exit>:
 36a:	f8 94       	cli

0000036c <__stop_program>:
 36c:	ff cf       	rjmp	.-2      	; 0x36c <__stop_program>
