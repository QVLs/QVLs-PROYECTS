
HABILITACION_DE_INTERRUPCIONES_GLOBALES.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000001be  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000016a  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000001be  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000001f0  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000080  00000000  00000000  00000230  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000947  00000000  00000000  000002b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000704  00000000  00000000  00000bf7  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000610  00000000  00000000  000012fb  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000ec  00000000  00000000  0000190c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000518  00000000  00000000  000019f8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000015e  00000000  00000000  00001f10  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000070  00000000  00000000  0000206e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ea e6       	ldi	r30, 0x6A	; 106
  7c:	f1 e0       	ldi	r31, 0x01	; 1
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a0 30       	cpi	r26, 0x00	; 0
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a0 e0       	ldi	r26, 0x00	; 0
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a0 30       	cpi	r26, 0x00	; 0
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 a0 00 	call	0x140	; 0x140 <main>
  9e:	0c 94 b3 00 	jmp	0x166	; 0x166 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <PAUSE_FLUJO>:
}

void SPI_MASTER_INIT_INTERRUPTION(void){
sei();
	DDRB|=(1<<DDB3)|(1<<DDB5);
	SPCR|=(1<<SPE)|(1<<MSTR)|(1<<SPR0)|(1<<SPIE);}
  a6:	61 15       	cp	r22, r1
  a8:	71 05       	cpc	r23, r1
  aa:	81 f4       	brne	.+32     	; 0xcc <PAUSE_FLUJO+0x26>
  ac:	41 30       	cpi	r20, 0x01	; 1
  ae:	51 05       	cpc	r21, r1
  b0:	19 f5       	brne	.+70     	; 0xf8 <PAUSE_FLUJO+0x52>
  b2:	21 30       	cpi	r18, 0x01	; 1
  b4:	31 05       	cpc	r19, r1
  b6:	21 f4       	brne	.+8      	; 0xc0 <PAUSE_FLUJO+0x1a>
  b8:	23 e0       	ldi	r18, 0x03	; 3
  ba:	20 93 81 00 	sts	0x0081, r18	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
  be:	24 c0       	rjmp	.+72     	; 0x108 <PAUSE_FLUJO+0x62>
  c0:	23 2b       	or	r18, r19
  c2:	11 f5       	brne	.+68     	; 0x108 <PAUSE_FLUJO+0x62>
  c4:	22 e0       	ldi	r18, 0x02	; 2
  c6:	20 93 81 00 	sts	0x0081, r18	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
  ca:	1e c0       	rjmp	.+60     	; 0x108 <PAUSE_FLUJO+0x62>
  cc:	61 30       	cpi	r22, 0x01	; 1
  ce:	71 05       	cpc	r23, r1
  d0:	d9 f4       	brne	.+54     	; 0x108 <PAUSE_FLUJO+0x62>
  d2:	41 15       	cp	r20, r1
  d4:	51 05       	cpc	r21, r1
  d6:	39 f4       	brne	.+14     	; 0xe6 <PAUSE_FLUJO+0x40>
  d8:	21 30       	cpi	r18, 0x01	; 1
  da:	31 05       	cpc	r19, r1
  dc:	a9 f4       	brne	.+42     	; 0x108 <PAUSE_FLUJO+0x62>
  de:	25 e0       	ldi	r18, 0x05	; 5
  e0:	20 93 81 00 	sts	0x0081, r18	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
  e4:	11 c0       	rjmp	.+34     	; 0x108 <PAUSE_FLUJO+0x62>
  e6:	41 30       	cpi	r20, 0x01	; 1
  e8:	51 05       	cpc	r21, r1
  ea:	71 f4       	brne	.+28     	; 0x108 <PAUSE_FLUJO+0x62>
  ec:	23 2b       	or	r18, r19
  ee:	61 f4       	brne	.+24     	; 0x108 <PAUSE_FLUJO+0x62>
  f0:	24 e0       	ldi	r18, 0x04	; 4
  f2:	20 93 81 00 	sts	0x0081, r18	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
  f6:	08 c0       	rjmp	.+16     	; 0x108 <PAUSE_FLUJO+0x62>
  f8:	45 2b       	or	r20, r21
  fa:	31 f4       	brne	.+12     	; 0x108 <PAUSE_FLUJO+0x62>
  fc:	21 30       	cpi	r18, 0x01	; 1
  fe:	31 05       	cpc	r19, r1
 100:	19 f4       	brne	.+6      	; 0x108 <PAUSE_FLUJO+0x62>
 102:	21 e0       	ldi	r18, 0x01	; 1
 104:	20 93 81 00 	sts	0x0081, r18	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
 108:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 10c:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 110:	e4 e8       	ldi	r30, 0x84	; 132
 112:	f0 e0       	ldi	r31, 0x00	; 0
 114:	20 81       	ld	r18, Z
 116:	31 81       	ldd	r19, Z+1	; 0x01
 118:	28 17       	cp	r18, r24
 11a:	39 07       	cpc	r19, r25
 11c:	d8 f3       	brcs	.-10     	; 0x114 <PAUSE_FLUJO+0x6e>
 11e:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 122:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 126:	08 95       	ret

00000128 <SPI_MASTER_INIT>:

void SPI_MASTER_INIT(void){
DDRB|=(1<<DDB3)|(1<<DDB5);
 128:	84 b1       	in	r24, 0x04	; 4
 12a:	88 62       	ori	r24, 0x28	; 40
 12c:	84 b9       	out	0x04, r24	; 4
SPCR|=(1<<SPE)|(1<<MSTR)|(1<<SPR0);}
 12e:	8c b5       	in	r24, 0x2c	; 44
 130:	81 65       	ori	r24, 0x51	; 81
 132:	8c bd       	out	0x2c, r24	; 44
 134:	08 95       	ret

00000136 <SPI_MASTER_TRANSMITION>:

void SPI_MASTER_TRANSMITION(char DATE){
SPDR=DATE;
 136:	8e bd       	out	0x2e, r24	; 46
while(!(SPSR&(1<<SPIF)));
 138:	0d b4       	in	r0, 0x2d	; 45
 13a:	07 fe       	sbrs	r0, 7
 13c:	fd cf       	rjmp	.-6      	; 0x138 <SPI_MASTER_TRANSMITION+0x2>
}
 13e:	08 95       	ret

00000140 <main>:



int main(void)
{
DDRC|=0b1111111;
 140:	87 b1       	in	r24, 0x07	; 7
 142:	8f 67       	ori	r24, 0x7F	; 127
 144:	87 b9       	out	0x07, r24	; 7

PAUSE_FLUJO(2000,1,0,1);
 146:	21 e0       	ldi	r18, 0x01	; 1
 148:	30 e0       	ldi	r19, 0x00	; 0
 14a:	40 e0       	ldi	r20, 0x00	; 0
 14c:	50 e0       	ldi	r21, 0x00	; 0
 14e:	61 e0       	ldi	r22, 0x01	; 1
 150:	70 e0       	ldi	r23, 0x00	; 0
 152:	80 ed       	ldi	r24, 0xD0	; 208
 154:	97 e0       	ldi	r25, 0x07	; 7
 156:	0e 94 53 00 	call	0xa6	; 0xa6 <PAUSE_FLUJO>
SPI_MASTER_INIT();
 15a:	0e 94 94 00 	call	0x128	; 0x128 <SPI_MASTER_INIT>
SPI_MASTER_TRANSMITION(0x8f);
 15e:	8f e8       	ldi	r24, 0x8F	; 143
 160:	0e 94 9b 00 	call	0x136	; 0x136 <SPI_MASTER_TRANSMITION>
 164:	ff cf       	rjmp	.-2      	; 0x164 <main+0x24>

00000166 <_exit>:
 166:	f8 94       	cli

00000168 <__stop_program>:
 168:	ff cf       	rjmp	.-2      	; 0x168 <__stop_program>
