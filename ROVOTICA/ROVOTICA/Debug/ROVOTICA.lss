
ROVOTICA.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000474  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000400  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000007  00800100  00800100  00000474  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000474  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000004a4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000030  00000000  00000000  000004e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000083e  00000000  00000000  00000514  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000006bd  00000000  00000000  00000d52  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000350  00000000  00000000  0000140f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000044  00000000  00000000  00001760  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003f2  00000000  00000000  000017a4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000000d4  00000000  00000000  00001b96  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000020  00000000  00000000  00001c6a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e0 e0       	ldi	r30, 0x00	; 0
  7c:	f4 e0       	ldi	r31, 0x04	; 4
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a0 30       	cpi	r26, 0x00	; 0
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a0 e0       	ldi	r26, 0x00	; 0
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a7 30       	cpi	r26, 0x07	; 7
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 88 00 	call	0x110	; 0x110 <main>
  9e:	0c 94 fe 01 	jmp	0x3fc	; 0x3fc <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <SENSOR1>:
uint8_t TR,AUTO;
uint8_t RT;


uint16_t SENSOR1(){
	ADMUX=0x01;
  a6:	81 e0       	ldi	r24, 0x01	; 1
  a8:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
	ADCSRA=(BIT1<<ADEN)|(BIT1<<ADSC);
  ac:	80 ec       	ldi	r24, 0xC0	; 192
  ae:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
	while(ADCSRA&(BIT1<<ADSC)){}
  b2:	ea e7       	ldi	r30, 0x7A	; 122
  b4:	f0 e0       	ldi	r31, 0x00	; 0
  b6:	80 81       	ld	r24, Z
  b8:	86 fd       	sbrc	r24, 6
  ba:	fd cf       	rjmp	.-6      	; 0xb6 <SENSOR1+0x10>
	ADCSRA&=~(BIT1<<ADEN);
  bc:	ea e7       	ldi	r30, 0x7A	; 122
  be:	f0 e0       	ldi	r31, 0x00	; 0
  c0:	80 81       	ld	r24, Z
  c2:	8f 77       	andi	r24, 0x7F	; 127
  c4:	80 83       	st	Z, r24
	VAR_REGISTRO_ADC1=ADC;
  c6:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
  ca:	70 91 79 00 	lds	r23, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
  ce:	70 93 03 01 	sts	0x0103, r23	; 0x800103 <VAR_REGISTRO_ADC1+0x1>
  d2:	60 93 02 01 	sts	0x0102, r22	; 0x800102 <VAR_REGISTRO_ADC1>
	VAR_VOLTAJE_ENTRADA1=(uint16_t)VAR_REGISTRO_ADC1*RESOLUTION0;
  d6:	80 e0       	ldi	r24, 0x00	; 0
  d8:	90 e0       	ldi	r25, 0x00	; 0
  da:	0e 94 03 01 	call	0x206	; 0x206 <__floatunsisf>
  de:	2f ee       	ldi	r18, 0xEF	; 239
  e0:	3f ef       	ldi	r19, 0xFF	; 255
  e2:	43 e3       	ldi	r20, 0x33	; 51
  e4:	5e e3       	ldi	r21, 0x3E	; 62
  e6:	0e 94 69 01 	call	0x2d2	; 0x2d2 <__mulsf3>
  ea:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <__fixunssfsi>
  ee:	70 93 01 01 	sts	0x0101, r23	; 0x800101 <__data_end+0x1>
  f2:	60 93 00 01 	sts	0x0100, r22	; 0x800100 <__data_end>
	ADMUX&=(BIT0<<MUX0);
  f6:	ec e7       	ldi	r30, 0x7C	; 124
  f8:	f0 e0       	ldi	r31, 0x00	; 0
  fa:	80 81       	ld	r24, Z
  fc:	10 82       	st	Z, r1
return	VAR_VOLTAJE_ENTRADA1;}
  fe:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_end>
 102:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_end+0x1>
 106:	08 95       	ret

00000108 <CONTROL_CONVERSOR_ANLOGICO_DIGITAL>:

void CONTROL_CONVERSOR_ANLOGICO_DIGITAL(){
DDRB=0b00000000;
 108:	14 b8       	out	0x04, r1	; 4
DDRD=0b00001101;}
 10a:	8d e0       	ldi	r24, 0x0D	; 13
 10c:	8a b9       	out	0x0a, r24	; 10
 10e:	08 95       	ret

00000110 <main>:



int main(void){
	
	CONTROL_CONVERSOR_ANLOGICO_DIGITAL();
 110:	0e 94 84 00 	call	0x108	; 0x108 <CONTROL_CONVERSOR_ANLOGICO_DIGITAL>
	/*FUNCION QUE OPTIENE Y CONVIERTE LOS DATOS DEL VOLTAJE GENERADOS POR EL SENSOR1 */

    while (1){


AUTO=PINB;
 114:	83 b1       	in	r24, 0x03	; 3
 116:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <AUTO>

if (AUTO==0x02){
 11a:	82 30       	cpi	r24, 0x02	; 2
 11c:	31 f5       	brne	.+76     	; 0x16a <main+0x5a>
 11e:	01 c0       	rjmp	.+2      	; 0x122 <main+0x12>
/***/

while(SENSOR1()!=5){
PORTD|=0b00001000;}
 120:	5b 9a       	sbi	0x0b, 3	; 11
AUTO=PINB;

if (AUTO==0x02){
/***/

while(SENSOR1()!=5){
 122:	0e 94 53 00 	call	0xa6	; 0xa6 <SENSOR1>
 126:	05 97       	sbiw	r24, 0x05	; 5
 128:	d9 f7       	brne	.-10     	; 0x120 <main+0x10>
PORTD|=0b00001000;}
PORTD&=~(0b00001000);
 12a:	5b 98       	cbi	0x0b, 3	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 12c:	2f e3       	ldi	r18, 0x3F	; 63
 12e:	8d e0       	ldi	r24, 0x0D	; 13
 130:	93 e0       	ldi	r25, 0x03	; 3
 132:	21 50       	subi	r18, 0x01	; 1
 134:	80 40       	sbci	r24, 0x00	; 0
 136:	90 40       	sbci	r25, 0x00	; 0
 138:	e1 f7       	brne	.-8      	; 0x132 <main+0x22>
 13a:	00 c0       	rjmp	.+0      	; 0x13c <main+0x2c>
 13c:	00 00       	nop
 13e:	01 c0       	rjmp	.+2      	; 0x142 <main+0x32>



_delay_ms(1000);
while(!(SENSOR1()==151)){
PORTD|=0b00000100;}
 140:	5a 9a       	sbi	0x0b, 2	; 11
PORTD&=~(0b00001000);



_delay_ms(1000);
while(!(SENSOR1()==151)){
 142:	0e 94 53 00 	call	0xa6	; 0xa6 <SENSOR1>
 146:	87 39       	cpi	r24, 0x97	; 151
 148:	91 05       	cpc	r25, r1
 14a:	d1 f7       	brne	.-12     	; 0x140 <main+0x30>
PORTD|=0b00000100;}
PORTD&=~(0b00000100);
 14c:	5a 98       	cbi	0x0b, 2	; 11
 14e:	83 ed       	ldi	r24, 0xD3	; 211
 150:	90 e3       	ldi	r25, 0x30	; 48
 152:	01 97       	sbiw	r24, 0x01	; 1
 154:	f1 f7       	brne	.-4      	; 0x152 <main+0x42>
 156:	00 c0       	rjmp	.+0      	; 0x158 <main+0x48>
 158:	00 00       	nop
 15a:	01 c0       	rjmp	.+2      	; 0x15e <main+0x4e>

_delay_ms(50);

while(SENSOR1()!=5){
PORTD|=0b00001000;}
 15c:	5b 9a       	sbi	0x0b, 3	; 11
PORTD|=0b00000100;}
PORTD&=~(0b00000100);

_delay_ms(50);

while(SENSOR1()!=5){
 15e:	0e 94 53 00 	call	0xa6	; 0xa6 <SENSOR1>
 162:	05 97       	sbiw	r24, 0x05	; 5
 164:	d9 f7       	brne	.-10     	; 0x15c <main+0x4c>
PORTD|=0b00001000;}
PORTD&=~(0b00001000);}
 166:	5b 98       	cbi	0x0b, 3	; 11
 168:	d5 cf       	rjmp	.-86     	; 0x114 <main+0x4>


else{
TR=PINB;
 16a:	93 b1       	in	r25, 0x03	; 3
 16c:	90 93 06 01 	sts	0x0106, r25	; 0x800106 <TR>
RT=PINB;
 170:	83 b1       	in	r24, 0x03	; 3
 172:	80 93 05 01 	sts	0x0105, r24	; 0x800105 <RT>

if ((RT==0x08)&&!(TR==0x04))
 176:	88 30       	cpi	r24, 0x08	; 8
 178:	21 f4       	brne	.+8      	; 0x182 <main+0x72>
 17a:	94 30       	cpi	r25, 0x04	; 4
 17c:	11 f0       	breq	.+4      	; 0x182 <main+0x72>
{PORTD|=0b00001000;
 17e:	5b 9a       	sbi	0x0b, 3	; 11
 180:	01 c0       	rjmp	.+2      	; 0x184 <main+0x74>
}else{PORTD&=~(0b00001000);}
 182:	5b 98       	cbi	0x0b, 3	; 11
 184:	83 ed       	ldi	r24, 0xD3	; 211
 186:	90 e3       	ldi	r25, 0x30	; 48
 188:	01 97       	sbiw	r24, 0x01	; 1
 18a:	f1 f7       	brne	.-4      	; 0x188 <main+0x78>
 18c:	00 c0       	rjmp	.+0      	; 0x18e <main+0x7e>
 18e:	00 00       	nop

_delay_ms(50);

if ((TR==0x04)&&!(RT==0x08))
 190:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <TR>
 194:	84 30       	cpi	r24, 0x04	; 4
 196:	31 f4       	brne	.+12     	; 0x1a4 <main+0x94>
 198:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <RT>
 19c:	88 30       	cpi	r24, 0x08	; 8
 19e:	11 f0       	breq	.+4      	; 0x1a4 <main+0x94>
{PORTD|=0b00000100;
 1a0:	5a 9a       	sbi	0x0b, 2	; 11
 1a2:	b8 cf       	rjmp	.-144    	; 0x114 <main+0x4>
}else{PORTD&=~(0b00000100);}
 1a4:	5a 98       	cbi	0x0b, 2	; 11
 1a6:	b6 cf       	rjmp	.-148    	; 0x114 <main+0x4>

000001a8 <__fixunssfsi>:
 1a8:	0e 94 48 01 	call	0x290	; 0x290 <__fp_splitA>
 1ac:	88 f0       	brcs	.+34     	; 0x1d0 <__fixunssfsi+0x28>
 1ae:	9f 57       	subi	r25, 0x7F	; 127
 1b0:	98 f0       	brcs	.+38     	; 0x1d8 <__fixunssfsi+0x30>
 1b2:	b9 2f       	mov	r27, r25
 1b4:	99 27       	eor	r25, r25
 1b6:	b7 51       	subi	r27, 0x17	; 23
 1b8:	b0 f0       	brcs	.+44     	; 0x1e6 <__fixunssfsi+0x3e>
 1ba:	e1 f0       	breq	.+56     	; 0x1f4 <__fixunssfsi+0x4c>
 1bc:	66 0f       	add	r22, r22
 1be:	77 1f       	adc	r23, r23
 1c0:	88 1f       	adc	r24, r24
 1c2:	99 1f       	adc	r25, r25
 1c4:	1a f0       	brmi	.+6      	; 0x1cc <__fixunssfsi+0x24>
 1c6:	ba 95       	dec	r27
 1c8:	c9 f7       	brne	.-14     	; 0x1bc <__fixunssfsi+0x14>
 1ca:	14 c0       	rjmp	.+40     	; 0x1f4 <__fixunssfsi+0x4c>
 1cc:	b1 30       	cpi	r27, 0x01	; 1
 1ce:	91 f0       	breq	.+36     	; 0x1f4 <__fixunssfsi+0x4c>
 1d0:	0e 94 62 01 	call	0x2c4	; 0x2c4 <__fp_zero>
 1d4:	b1 e0       	ldi	r27, 0x01	; 1
 1d6:	08 95       	ret
 1d8:	0c 94 62 01 	jmp	0x2c4	; 0x2c4 <__fp_zero>
 1dc:	67 2f       	mov	r22, r23
 1de:	78 2f       	mov	r23, r24
 1e0:	88 27       	eor	r24, r24
 1e2:	b8 5f       	subi	r27, 0xF8	; 248
 1e4:	39 f0       	breq	.+14     	; 0x1f4 <__fixunssfsi+0x4c>
 1e6:	b9 3f       	cpi	r27, 0xF9	; 249
 1e8:	cc f3       	brlt	.-14     	; 0x1dc <__fixunssfsi+0x34>
 1ea:	86 95       	lsr	r24
 1ec:	77 95       	ror	r23
 1ee:	67 95       	ror	r22
 1f0:	b3 95       	inc	r27
 1f2:	d9 f7       	brne	.-10     	; 0x1ea <__fixunssfsi+0x42>
 1f4:	3e f4       	brtc	.+14     	; 0x204 <__fixunssfsi+0x5c>
 1f6:	90 95       	com	r25
 1f8:	80 95       	com	r24
 1fa:	70 95       	com	r23
 1fc:	61 95       	neg	r22
 1fe:	7f 4f       	sbci	r23, 0xFF	; 255
 200:	8f 4f       	sbci	r24, 0xFF	; 255
 202:	9f 4f       	sbci	r25, 0xFF	; 255
 204:	08 95       	ret

00000206 <__floatunsisf>:
 206:	e8 94       	clt
 208:	09 c0       	rjmp	.+18     	; 0x21c <__floatsisf+0x12>

0000020a <__floatsisf>:
 20a:	97 fb       	bst	r25, 7
 20c:	3e f4       	brtc	.+14     	; 0x21c <__floatsisf+0x12>
 20e:	90 95       	com	r25
 210:	80 95       	com	r24
 212:	70 95       	com	r23
 214:	61 95       	neg	r22
 216:	7f 4f       	sbci	r23, 0xFF	; 255
 218:	8f 4f       	sbci	r24, 0xFF	; 255
 21a:	9f 4f       	sbci	r25, 0xFF	; 255
 21c:	99 23       	and	r25, r25
 21e:	a9 f0       	breq	.+42     	; 0x24a <__floatsisf+0x40>
 220:	f9 2f       	mov	r31, r25
 222:	96 e9       	ldi	r25, 0x96	; 150
 224:	bb 27       	eor	r27, r27
 226:	93 95       	inc	r25
 228:	f6 95       	lsr	r31
 22a:	87 95       	ror	r24
 22c:	77 95       	ror	r23
 22e:	67 95       	ror	r22
 230:	b7 95       	ror	r27
 232:	f1 11       	cpse	r31, r1
 234:	f8 cf       	rjmp	.-16     	; 0x226 <__floatsisf+0x1c>
 236:	fa f4       	brpl	.+62     	; 0x276 <__floatsisf+0x6c>
 238:	bb 0f       	add	r27, r27
 23a:	11 f4       	brne	.+4      	; 0x240 <__floatsisf+0x36>
 23c:	60 ff       	sbrs	r22, 0
 23e:	1b c0       	rjmp	.+54     	; 0x276 <__floatsisf+0x6c>
 240:	6f 5f       	subi	r22, 0xFF	; 255
 242:	7f 4f       	sbci	r23, 0xFF	; 255
 244:	8f 4f       	sbci	r24, 0xFF	; 255
 246:	9f 4f       	sbci	r25, 0xFF	; 255
 248:	16 c0       	rjmp	.+44     	; 0x276 <__floatsisf+0x6c>
 24a:	88 23       	and	r24, r24
 24c:	11 f0       	breq	.+4      	; 0x252 <__floatsisf+0x48>
 24e:	96 e9       	ldi	r25, 0x96	; 150
 250:	11 c0       	rjmp	.+34     	; 0x274 <__floatsisf+0x6a>
 252:	77 23       	and	r23, r23
 254:	21 f0       	breq	.+8      	; 0x25e <__floatsisf+0x54>
 256:	9e e8       	ldi	r25, 0x8E	; 142
 258:	87 2f       	mov	r24, r23
 25a:	76 2f       	mov	r23, r22
 25c:	05 c0       	rjmp	.+10     	; 0x268 <__floatsisf+0x5e>
 25e:	66 23       	and	r22, r22
 260:	71 f0       	breq	.+28     	; 0x27e <__floatsisf+0x74>
 262:	96 e8       	ldi	r25, 0x86	; 134
 264:	86 2f       	mov	r24, r22
 266:	70 e0       	ldi	r23, 0x00	; 0
 268:	60 e0       	ldi	r22, 0x00	; 0
 26a:	2a f0       	brmi	.+10     	; 0x276 <__floatsisf+0x6c>
 26c:	9a 95       	dec	r25
 26e:	66 0f       	add	r22, r22
 270:	77 1f       	adc	r23, r23
 272:	88 1f       	adc	r24, r24
 274:	da f7       	brpl	.-10     	; 0x26c <__floatsisf+0x62>
 276:	88 0f       	add	r24, r24
 278:	96 95       	lsr	r25
 27a:	87 95       	ror	r24
 27c:	97 f9       	bld	r25, 7
 27e:	08 95       	ret

00000280 <__fp_split3>:
 280:	57 fd       	sbrc	r21, 7
 282:	90 58       	subi	r25, 0x80	; 128
 284:	44 0f       	add	r20, r20
 286:	55 1f       	adc	r21, r21
 288:	59 f0       	breq	.+22     	; 0x2a0 <__fp_splitA+0x10>
 28a:	5f 3f       	cpi	r21, 0xFF	; 255
 28c:	71 f0       	breq	.+28     	; 0x2aa <__fp_splitA+0x1a>
 28e:	47 95       	ror	r20

00000290 <__fp_splitA>:
 290:	88 0f       	add	r24, r24
 292:	97 fb       	bst	r25, 7
 294:	99 1f       	adc	r25, r25
 296:	61 f0       	breq	.+24     	; 0x2b0 <__fp_splitA+0x20>
 298:	9f 3f       	cpi	r25, 0xFF	; 255
 29a:	79 f0       	breq	.+30     	; 0x2ba <__fp_splitA+0x2a>
 29c:	87 95       	ror	r24
 29e:	08 95       	ret
 2a0:	12 16       	cp	r1, r18
 2a2:	13 06       	cpc	r1, r19
 2a4:	14 06       	cpc	r1, r20
 2a6:	55 1f       	adc	r21, r21
 2a8:	f2 cf       	rjmp	.-28     	; 0x28e <__fp_split3+0xe>
 2aa:	46 95       	lsr	r20
 2ac:	f1 df       	rcall	.-30     	; 0x290 <__fp_splitA>
 2ae:	08 c0       	rjmp	.+16     	; 0x2c0 <__fp_splitA+0x30>
 2b0:	16 16       	cp	r1, r22
 2b2:	17 06       	cpc	r1, r23
 2b4:	18 06       	cpc	r1, r24
 2b6:	99 1f       	adc	r25, r25
 2b8:	f1 cf       	rjmp	.-30     	; 0x29c <__fp_splitA+0xc>
 2ba:	86 95       	lsr	r24
 2bc:	71 05       	cpc	r23, r1
 2be:	61 05       	cpc	r22, r1
 2c0:	08 94       	sec
 2c2:	08 95       	ret

000002c4 <__fp_zero>:
 2c4:	e8 94       	clt

000002c6 <__fp_szero>:
 2c6:	bb 27       	eor	r27, r27
 2c8:	66 27       	eor	r22, r22
 2ca:	77 27       	eor	r23, r23
 2cc:	cb 01       	movw	r24, r22
 2ce:	97 f9       	bld	r25, 7
 2d0:	08 95       	ret

000002d2 <__mulsf3>:
 2d2:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <__mulsf3x>
 2d6:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__fp_round>
 2da:	0e 94 df 01 	call	0x3be	; 0x3be <__fp_pscA>
 2de:	38 f0       	brcs	.+14     	; 0x2ee <__mulsf3+0x1c>
 2e0:	0e 94 e6 01 	call	0x3cc	; 0x3cc <__fp_pscB>
 2e4:	20 f0       	brcs	.+8      	; 0x2ee <__mulsf3+0x1c>
 2e6:	95 23       	and	r25, r21
 2e8:	11 f0       	breq	.+4      	; 0x2ee <__mulsf3+0x1c>
 2ea:	0c 94 d6 01 	jmp	0x3ac	; 0x3ac <__fp_inf>
 2ee:	0c 94 dc 01 	jmp	0x3b8	; 0x3b8 <__fp_nan>
 2f2:	11 24       	eor	r1, r1
 2f4:	0c 94 63 01 	jmp	0x2c6	; 0x2c6 <__fp_szero>

000002f8 <__mulsf3x>:
 2f8:	0e 94 40 01 	call	0x280	; 0x280 <__fp_split3>
 2fc:	70 f3       	brcs	.-36     	; 0x2da <__mulsf3+0x8>

000002fe <__mulsf3_pse>:
 2fe:	95 9f       	mul	r25, r21
 300:	c1 f3       	breq	.-16     	; 0x2f2 <__mulsf3+0x20>
 302:	95 0f       	add	r25, r21
 304:	50 e0       	ldi	r21, 0x00	; 0
 306:	55 1f       	adc	r21, r21
 308:	62 9f       	mul	r22, r18
 30a:	f0 01       	movw	r30, r0
 30c:	72 9f       	mul	r23, r18
 30e:	bb 27       	eor	r27, r27
 310:	f0 0d       	add	r31, r0
 312:	b1 1d       	adc	r27, r1
 314:	63 9f       	mul	r22, r19
 316:	aa 27       	eor	r26, r26
 318:	f0 0d       	add	r31, r0
 31a:	b1 1d       	adc	r27, r1
 31c:	aa 1f       	adc	r26, r26
 31e:	64 9f       	mul	r22, r20
 320:	66 27       	eor	r22, r22
 322:	b0 0d       	add	r27, r0
 324:	a1 1d       	adc	r26, r1
 326:	66 1f       	adc	r22, r22
 328:	82 9f       	mul	r24, r18
 32a:	22 27       	eor	r18, r18
 32c:	b0 0d       	add	r27, r0
 32e:	a1 1d       	adc	r26, r1
 330:	62 1f       	adc	r22, r18
 332:	73 9f       	mul	r23, r19
 334:	b0 0d       	add	r27, r0
 336:	a1 1d       	adc	r26, r1
 338:	62 1f       	adc	r22, r18
 33a:	83 9f       	mul	r24, r19
 33c:	a0 0d       	add	r26, r0
 33e:	61 1d       	adc	r22, r1
 340:	22 1f       	adc	r18, r18
 342:	74 9f       	mul	r23, r20
 344:	33 27       	eor	r19, r19
 346:	a0 0d       	add	r26, r0
 348:	61 1d       	adc	r22, r1
 34a:	23 1f       	adc	r18, r19
 34c:	84 9f       	mul	r24, r20
 34e:	60 0d       	add	r22, r0
 350:	21 1d       	adc	r18, r1
 352:	82 2f       	mov	r24, r18
 354:	76 2f       	mov	r23, r22
 356:	6a 2f       	mov	r22, r26
 358:	11 24       	eor	r1, r1
 35a:	9f 57       	subi	r25, 0x7F	; 127
 35c:	50 40       	sbci	r21, 0x00	; 0
 35e:	9a f0       	brmi	.+38     	; 0x386 <__mulsf3_pse+0x88>
 360:	f1 f0       	breq	.+60     	; 0x39e <__mulsf3_pse+0xa0>
 362:	88 23       	and	r24, r24
 364:	4a f0       	brmi	.+18     	; 0x378 <__mulsf3_pse+0x7a>
 366:	ee 0f       	add	r30, r30
 368:	ff 1f       	adc	r31, r31
 36a:	bb 1f       	adc	r27, r27
 36c:	66 1f       	adc	r22, r22
 36e:	77 1f       	adc	r23, r23
 370:	88 1f       	adc	r24, r24
 372:	91 50       	subi	r25, 0x01	; 1
 374:	50 40       	sbci	r21, 0x00	; 0
 376:	a9 f7       	brne	.-22     	; 0x362 <__mulsf3_pse+0x64>
 378:	9e 3f       	cpi	r25, 0xFE	; 254
 37a:	51 05       	cpc	r21, r1
 37c:	80 f0       	brcs	.+32     	; 0x39e <__mulsf3_pse+0xa0>
 37e:	0c 94 d6 01 	jmp	0x3ac	; 0x3ac <__fp_inf>
 382:	0c 94 63 01 	jmp	0x2c6	; 0x2c6 <__fp_szero>
 386:	5f 3f       	cpi	r21, 0xFF	; 255
 388:	e4 f3       	brlt	.-8      	; 0x382 <__mulsf3_pse+0x84>
 38a:	98 3e       	cpi	r25, 0xE8	; 232
 38c:	d4 f3       	brlt	.-12     	; 0x382 <__mulsf3_pse+0x84>
 38e:	86 95       	lsr	r24
 390:	77 95       	ror	r23
 392:	67 95       	ror	r22
 394:	b7 95       	ror	r27
 396:	f7 95       	ror	r31
 398:	e7 95       	ror	r30
 39a:	9f 5f       	subi	r25, 0xFF	; 255
 39c:	c1 f7       	brne	.-16     	; 0x38e <__mulsf3_pse+0x90>
 39e:	fe 2b       	or	r31, r30
 3a0:	88 0f       	add	r24, r24
 3a2:	91 1d       	adc	r25, r1
 3a4:	96 95       	lsr	r25
 3a6:	87 95       	ror	r24
 3a8:	97 f9       	bld	r25, 7
 3aa:	08 95       	ret

000003ac <__fp_inf>:
 3ac:	97 f9       	bld	r25, 7
 3ae:	9f 67       	ori	r25, 0x7F	; 127
 3b0:	80 e8       	ldi	r24, 0x80	; 128
 3b2:	70 e0       	ldi	r23, 0x00	; 0
 3b4:	60 e0       	ldi	r22, 0x00	; 0
 3b6:	08 95       	ret

000003b8 <__fp_nan>:
 3b8:	9f ef       	ldi	r25, 0xFF	; 255
 3ba:	80 ec       	ldi	r24, 0xC0	; 192
 3bc:	08 95       	ret

000003be <__fp_pscA>:
 3be:	00 24       	eor	r0, r0
 3c0:	0a 94       	dec	r0
 3c2:	16 16       	cp	r1, r22
 3c4:	17 06       	cpc	r1, r23
 3c6:	18 06       	cpc	r1, r24
 3c8:	09 06       	cpc	r0, r25
 3ca:	08 95       	ret

000003cc <__fp_pscB>:
 3cc:	00 24       	eor	r0, r0
 3ce:	0a 94       	dec	r0
 3d0:	12 16       	cp	r1, r18
 3d2:	13 06       	cpc	r1, r19
 3d4:	14 06       	cpc	r1, r20
 3d6:	05 06       	cpc	r0, r21
 3d8:	08 95       	ret

000003da <__fp_round>:
 3da:	09 2e       	mov	r0, r25
 3dc:	03 94       	inc	r0
 3de:	00 0c       	add	r0, r0
 3e0:	11 f4       	brne	.+4      	; 0x3e6 <__fp_round+0xc>
 3e2:	88 23       	and	r24, r24
 3e4:	52 f0       	brmi	.+20     	; 0x3fa <__fp_round+0x20>
 3e6:	bb 0f       	add	r27, r27
 3e8:	40 f4       	brcc	.+16     	; 0x3fa <__fp_round+0x20>
 3ea:	bf 2b       	or	r27, r31
 3ec:	11 f4       	brne	.+4      	; 0x3f2 <__fp_round+0x18>
 3ee:	60 ff       	sbrs	r22, 0
 3f0:	04 c0       	rjmp	.+8      	; 0x3fa <__fp_round+0x20>
 3f2:	6f 5f       	subi	r22, 0xFF	; 255
 3f4:	7f 4f       	sbci	r23, 0xFF	; 255
 3f6:	8f 4f       	sbci	r24, 0xFF	; 255
 3f8:	9f 4f       	sbci	r25, 0xFF	; 255
 3fa:	08 95       	ret

000003fc <_exit>:
 3fc:	f8 94       	cli

000003fe <__stop_program>:
 3fe:	ff cf       	rjmp	.-2      	; 0x3fe <__stop_program>
